worker_processes 1;
error_log /var/log/nginx_error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Basic Settings
    sendfile on;
    #tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 20;
    client_max_body_size 15m;
    client_body_timeout 60;
    client_header_timeout 60;
    client_body_buffer_size  1K;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    server_tokens off;
    ignore_invalid_headers on;

    fastcgi_buffers 8 16k;
    fastcgi_buffer_size 32k;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Default server block blacklisting all unconfigured access
    server {
        listen 80;

        # Configure the domain that will run WordPress
        server_name wp.l;
        autoindex off;

        # WordPress needs to be in the webroot of /var/www/ in this case
        root /tmp/wp;
        index index.html index.htm index.php;
        try_files $uri $uri/ /index.php?q=$uri&$args;

        location ~ ^(.+?\.php)(/.*)?$ {
            # Filter out arbitrary code execution
            location ~ \..*/.*\.php$ {return 404;}
            try_files $uri = 404;
            fastcgi_split_path_info ^(.+.php)(.*)$;
            fastcgi_pass unix:/var/run/php-fpm.socket;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }

        # Deliver 404 instead of 403 "Forbidden"
        error_page 403 = 404;

        # Do not allow access to files giving away your WordPress version
        location ~ /(\.|wp-config.php|readme.html|licence.txt) {
            return 404;
        }

        # Add trailing slash to */wp-admin requests.
        rewrite /wp-admin$ $scheme://$host$uri/ permanent;
    }
}
